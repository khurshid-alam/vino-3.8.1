From 74e8a70f2c9a5248d6718ce443e07c7ed314dfff Mon Sep 17 00:00:00 2001
From: Tobias Junghans <tobydox@veyon.io>
Date: Wed, 27 May 2020 12:13:48 +0200
Subject: [PATCH] libvncserver: encodings: prevent OOB accesses

---
 libvncserver/corre.c   | 2 +-
 libvncserver/hextile.c | 2 +-
 libvncserver/rre.c     | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

--- a/server/libvncserver/corre.c
+++ b/server/libvncserver/corre.c
@@ -240,7 +240,7 @@ subrectEncode##bpp(data,w,h)
             seg = data+(j*w);                                                 \
             if (seg[x] != cl) {break;}                                        \
             i = x;                                                            \
-            while ((seg[i] == cl) && (i < w)) i += 1;                         \
+            while ((i < w) && (seg[i] == cl)) i += 1;                         \
             i -= 1;                                                           \
             if (j == y) vx = hx = i;                                          \
             if (i < vx) vx = i;                                               \
--- a/server/libvncserver/hextile.c
+++ b/server/libvncserver/hextile.c
@@ -223,7 +223,7 @@ subrectEncode##bpp(rfbClientPtr cl, uint
                     seg = data+(j*w);                                           \
                     if (seg[x] != cl2) {break;}                                 \
                     i = x;                                                      \
-                    while ((seg[i] == cl2) && (i < w)) i += 1;                  \
+                    while ((i < w) && (seg[i] == cl2)) i += 1;                  \
                     i -= 1;                                                     \
                     if (j == y) vx = hx = i;                                    \
                     if (i < vx) vx = i;                                         \
--- a/server/libvncserver/rre.c
+++ b/server/libvncserver/rre.c
@@ -209,7 +209,7 @@ subrectEncode##bpp(data,w,h)
             seg = data+(j*w);                                                 \
             if (seg[x] != cl) {break;}                                        \
             i = x;                                                            \
-            while ((seg[i] == cl) && (i < w)) i += 1;                         \
+            while ((i < w) && (seg[i] == cl)) i += 1;                         \
             i -= 1;                                                           \
             if (j == y) vx = hx = i;                                          \
             if (i < vx) vx = i;                                               \
